package utumno.mope.utils;

import java.util.ArrayList;

public class ClassUtils {
	
	private static final String[] reuters115ClassesNames =
		{
		"acq",
		"corn",
		"crude",
		"earn",
		"grain",
		"interest",
		"money-fx",
		"ship",
		"trade",
		"wheat",
		"alum",
		"austdlr",
		"barley",
		"bop",
		"can",
		"carcass",
		"castor-oil",
		"castorseed",
		"citruspulp",
		"cocoa",
		"coconut",
		"coconut-oil",
		"coffee",
		"copper",
		"copra-cake",
		"corn-oil",
		"cornglutenfeed",
		"cotton",
		"cotton-oil",
		"cpi",
		"cpu",
		"cruzado",
		"dfl",
		"dkr",
		"dlr",
		"dmk",
		"fishmeal",
		"fuel",
		"gas",
		"gnp",
		"gold",
		"groundnut",
		"groundnut-oil",
		"heat",
		"hog",
		"housing",
		"income",
		"instal-debt",
		"inventories",
		"ipi",
		"iron-steel",
		"jet",
		"jobs",
		"l-cattle",
		"lead",
		"lei",
		"lin-meal",
		"lin-oil",
		"linseed",
		"lit",
		"livestock",
		"lumber",
		"meal-feed",
		"money-supply",
		"naphtha",
		"nat-gas",
		"nickel",
		"nkr",
		"nzdlr",
		"oat",
		"oilseed",
		"orange",
		"palladium",
		"palm-oil",
		"palmkernel",
		"peseta",
		"pet-chem",
		"platinum",
		"plywood",
		"pork-belly",
		"potato",
		"propane",
		"rand",
		"rape-meal",
		"rape-oil",
		"rapeseed",
		"red-bean",
		"reserves",
		"retail",
		"rice",
		"ringgit",
		"rubber",
		"rupiah",
		"rye",
		"saudriyal",
		"silver",
		"skr",
		"sorghum",
		"soy-meal",
		"soy-oil",
		"soybean",
		"stg",
		"strategic-metal",
		"sugar",
		"sun-meal",
		"sun-oil",
		"sunseed",
		"tapioca",
		"tea",
		"tin",
		"veg-oil",
		"wool",
		"wpi",
		"yen",
		"zinc"
		};

	private static final String[] reuters90ClassesNames =
		{
		"acq",
		"corn",
		"crude",
		"earn",
		"grain",
		"interest",
		"money-fx",
		"ship",
		"trade",
		"wheat",
		"alum",
		"barley",
		"bop",
		"carcass",
		"castor-oil",
		"cocoa",
		"coconut",
		"coconut-oil",
		"coffee",
		"copper",
		"copra-cake",
		"cotton",
		"cotton-oil",
		"cpi",
		"cpu",
		"dfl",
		"dlr",
		"dmk",
		"fuel",
		"gas",
		"gnp",
		"gold",
		"groundnut",
		"groundnut-oil",
		"heat",
		"hog",
		"housing",
		"income",
		"instal-debt",
		"ipi",
		"iron-steel",
		"jet",
		"jobs",
		"l-cattle",
		"lead",
		"lei",
		"lin-oil",
		"livestock",
		"lumber",
		"meal-feed",
		"money-supply",
		"naphtha",     
		"nat-gas",
		"nickel",
		"nkr",
		"nzdlr",
		"oat",
		"oilseed",
		"orange",
		"palladium", 
		"palm-oil",
		"palmkernel",
		"pet-chem",
		"platinum",
		"potato",
		"propane",
		"rand",
		"rape-oil",
		"rapeseed",
		"reserves",
		"retail",
		"rice",
		"rubber",
		"rye",
		"silver",
		"sorghum",
		"soy-meal",
		"soy-oil",
		"soybean",
		"strategic-metal",
		"sugar",
		"sun-meal",
		"sun-oil",
		"sunseed",
		"tea",
		"tin",
		"veg-oil",
		"wpi",
		"yen",
		"zinc"
		};
	
	private static final String[] reuters10ClassesNames =
		{
		"acq",
		"corn",
		"crude",
		"earn",
		"grain",
		"interest",
		"money-fx",
		"ship",
		"trade",
		"wheat"
		};
	
	private static final String[] reutersBIG103ClassesNames =
		{
		"C11",
		"C12",
		"C13",
		"C14",
		"C15",
		"C151",
		"C1511",
		"C152",
		"C16",
		"C17",
		"C171",
		"C172",
		"C173",
		"C174",
		"C18",
		"C181",
		"C182",
		"C183",
		"C21",
		"C22",
		"C23",
		"C24",
		"C31",
		"C311",
		"C312",
		"C313",
		"C32",
		"C33",
		"C331",
		"C34",
		"C41",
		"C411",
		"C42",
		"CCAT",
		"E11",
		"E12",
		"E121",
		"E13",
		"E131",
		"E132",
		"E14",
		"E141",
		"E142",
		"E143",
		"E21",
		"E211",
		"E212",
		"E31",
		"E311",
		//"E312",
		"E313",
		"E41",
		"E411",
		"E51",
		"E511",
		"E512",
		"E513",
		"E61",
		"E71",
		"ECAT",
		"G15",
		"G151",
		"G152",
		"G153",
		"G154",
		"G155",
		"G156",
		"G157",
		"G158",
		"G159",
		"GCAT",
		"GCRIM",
		"GDEF",
		"GDIP",
		"GDIS",
		"GENT",
		"GENV",
		"GFAS",
		"GHEA",
		"GJOB",
		//"GMIL",
		"GOBIT",
		"GODD",
		"GPOL",
		"GPRO",
		"GREL",
		"GSCI",
		"GSPO",
		"GTOUR",
		"GVIO",
		"GVOTE",
		"GWEA",
		"GWELF",
		"M11",
		"M12",
		"M13",
		"M131",
		"M132",
		"M14",
		"M141",
		"M142",
		"M143",
		"MCAT"
		};
	
	private static final String[] reutersBIG80ClassesNames =
	{
		"C11",
		"C12",
		"C13",
		"C14",
		"C1511",
		"C152",
		"C16",
		"C171",
		"C172",
		"C173",
		"C174",
		"C181",
		"C182",
		"C183",
		"C21",
		"C22",
		"C23",
		"C24",
		"C311",
		"C312",
		"C313",
		"C32",
		"C331",
		"C34",
		"C411",
		"C42",
		"E11",
		"E121",
		"E131",
		"E132",
		"E141",
		"E142",
		"E143",
		"E211",
		"E212",
		"E311",
		"E313",
		"E411",
		"E511",
		"E512",
		"E513",
		"E61",
		"E71",
		"G151",
		"G152",
		"G153",
		"G154",
		"G155",
		"G156",
		"G157",
		"G158",
		"G159",
		"GCRIM",
		"GDEF",
		"GDIP",
		"GDIS",
		"GENT",
		"GENV",
		"GFAS",
		"GHEA",
		"GJOB",
		"GOBIT",
		"GODD",
		"GPOL",
		"GPRO",
		"GREL",
		"GSCI",
		"GSPO",
		"GTOUR",
		"GVIO",
		"GVOTE",
		"GWEA",
		"GWELF",
		"M11",
		"M12",
		"M131",
		"M132",
		"M141",
		"M142",
		"M143"
	};
	
	private static final String[] reutersBIGIn354ClassesNames =
	{
		"i01000",
		"i01001",
		"i0100105",
		//"i0100107",
		"i0100119",
		"i0100121",
		"i0100124",
		"i0100128",
		"i0100132",
		"i0100136",
		"i0100137",
		"i0100138",
		"i0100141",
		"i0100142",
		"i0100144",
		"i0100145",
		"i01002",
		"i0100206",
		"i0100216",
		"i0100223",
		"i02000",
		"i03000",
		"i11000",
		//"i12000",
		"i13000",
		"i1300002",
		"i1300003",
		"i1300013",
		"i1300014",
		"i14000",
		"i15000",
		"i16000",
		"i16100",
		"i1610107",
		"i1610109",
		"i16200",
		"i16300",
		"i17000",
		"i21000",
		"i22000",
		"i22100",
		"i22200",
		"i22300",
		"i22400",
		"i22450",
		"i22460",
		"i22470",
		"i22471",
		"i22472",
		"i23000",
		"i24000",
		"i24100",
		"i24200",
		"i24300",
		//"i24400",
		//"i24500",
		"i24600",
		"i24700",
		"i24794",
		"i24800",
		"i25000",
		"i25100",
		"i25110",
		"i25120",
		"i25130",
		"i25140",
		//"i25160",
		"i25510",
		//"i25520",
		"i25620",
		//"i25650",
		"i25670",
		"i25680",
		"i25700",
		"i25800",
		"i26000",
		"i31000",
		"i32000",
		"i32040",
		"i32050",
		"i32100",
		"i32200",
		"i32300",
		"i32440",
		"i32450",
		"i32510",
		"i32540",
		"i32550",
		"i32600",
		"i32751",
		"i32752",
		//"i32753",
		"i32754",
		//"i32755",
		"i32810",
		"i32830",
		"i32840",
		//"i32851",
		"i32852",
		"i32870",
		"i32900",
		"i33010",
		"i33020",
		"i3302003",
		"i3302004",
		"i3302013",
		"i3302015",
		"i3302017",
		//"i3302018",
		"i3302019",
		"i3302020",
		"i3302021",
		//"i3302022",
		"i33030",
		"i34000",
		"i34100",
		"i34200",
		"i34320",
		"i34330",
		"i34340",
		"i34350",
		"i34400",
		"i34410",
		"i34420",
		"i34430",
		"i34440",
		"i34520",
		"i34531",
		"i34532",
		"i34540",
		"i34600",
		"i34700",
		"i35000",
		"i35101",
		"i35102",
		//"i35200",
		"i35300",
		"i36101",
		"i36102",
		//"i36103",
		"i36200",
		"i36300",
		"i36400",
		"i3640002",
		"i3640007",
		"i3640010",
		"i3640026",
		"i3640029",
		//"i3640030",
		"i3640045",
		"i3640046",
		"i3640047",
		//"i3640048",
		"i37000",
		"i37100",
		"i37200",
		"i37300",
		"i37330",
		"i37400",
		"i41000",
		"i41100",
		"i41200",
		"i41220",
		"i41230",
		"i41300",
		"i41400",
		"i41500",
		"i41600",
		//"i41800",
		"i41900",
		"i42000",
		"i42100",
		"i42210",
		//"i42220",
		"i42390",
		"i42400",
		"i42600",
		"i42700",
		"i42800",
		"i42900",
		"i43000",
		"i44000",
		//"i45000",
		//"i45100",
		//"i45300",
		//"i45500",
		//"i45600",
		"i46000",
		"i46700",
		"i47000",
		"i47100",
		"i47101",
		"i47200",
		"i47500",
		"i47510",
		"i47520",
		//"i4752105",
		"i47530",
		"i48000",
		"i48100",
		"i48110",
		"i48300",
		"i49100",
		//"i49200",
		"i49300",
		"i49410",
		"i49420",
		"i49540",
		"i50000",
		"i50100",
		"i5010022",
		"i5010023",
		//"i5010024",
		"i5010025",
		//"i5010027",
		"i5010028",
		//"i5010029",
		"i5010031",
		"i50200",
		"i5020002",
		//"i5020006",
		//"i5020008",
		"i5020011",
		"i5020017",
		//"i5020022",
		"i5020028",
		//"i5020030",
		//"i5020032",
		"i5020039",
		"i5020041",
		"i5020043",
		"i5020044",
		"i5020045",
		//"i5020047",
		//"i5020050",
		//"i5020051",
		"i50300",
		"i50400",
		"i61000",
		"i63000",
		"i64000",
		"i64100",
		"i64200",
		"i64300",
		"i64500",
		"i64600",
		"i64700",
		"i64800",
		"i65100",
		"i65200",
		"i65300",
		"i65400",
		"i6540005",
		"i6540011",
		"i6540030",
		"i65600",
		"i6560002",
		"i6560003",
		//"i6560011",
		"i66000",
		"i66100",
		"i66200",
		"i66500",
		"i67000",
		"i71000",
		"i72101",
		"i72102",
		"i72200",
		"i72300",
		"i72603",
		"i74000",
		"i75000",
		"i75100",
		"i76300",
		"i76400",
		"i77001",
		"i77002",
		"i77003",
		"i79010",
		"i79020",
		"i81000",
		"i81400",
		"i81401",
		"i81402",
		"i81403",
		"i81501",
		"i8150103",
		"i8150106",
		"i8150108",
		"i8150110",
		"i81502",
		"i8150203",
		"i8150206",
		"i8150211",
		"i8150214",
		"i8150216",
		"i82000",
		"i82001",
		"i82002",
		"i82003",
		"i8200316",
		"i8200318",
		"i83100",
		"i83200",
		"i83400",
		"i83500",
		"i83600",
		"i83700",
		"i83800",
		"i83940",
		"i8394007",
		"i83951",
		"i83952",
		//"i8395205",
		//"i83953",
		"i83954",
		"i8395416",
		"i8395419",
		"i8395448",
		"i8395449",
		//"i8395451",
		"i83960",
		"i84000",
		//"i84100",
		"i84200",
		//"i84300",
		"i84600",
		"i84801",
		//"i84802",
		"i84803",
		"i84804",
		"i8480401",
		//"i8480410",
		"i85000",
		"i8500005",
		"i8500011",
		"i8500021",
		"i8500029",
		"i8500031",
		"i92110",
		"i92120",
		"i92300",
		"i95100",
		"i97100",
		"i97400",
		"i9741102",
		"i9741105",
		"i9741109",
		"i9741110",
		"i9741112",
		"i97412",
		"i97911",
		"i97912",
		"i98100"
	};
	
	private static final String[] reutersBIGIn262ClassesNames =
	{
		"i0100105",
		"i0100119",
		"i0100121",
		"i0100124",
		"i0100128",
		"i0100132",
		"i0100136",
		"i0100137",
		"i0100138",
		"i0100141",
		"i0100142",
		"i0100144",
		"i0100145",
		"i0100206",
		"i0100216",
		"i0100223",
		"i02000",
		"i03000",
		"i11000",
		"i1300002",
		"i1300003",
		"i1300013",
		"i1300014",
		"i14000",
		"i15000",
		"i1610107",
		"i1610109",
		"i16200",
		"i16300",
		"i17000",
		"i21000",
		"i22100",
		"i22200",
		"i22300",
		"i22450",
		"i22460",
		"i22471",
		"i22472",
		"i23000",
		"i24100",
		"i24200",
		"i24300",
		"i24600",
		"i24794",
		"i24800",
		"i25110",
		"i25120",
		"i25130",
		"i25140",
		"i25510",
		"i25620",
		"i25670",
		"i25680",
		"i25700",
		"i25800",
		"i26000",
		"i31000",
		"i32040",
		"i32050",
		"i32100",
		"i32200",
		"i32300",
		"i32440",
		"i32450",
		"i32510",
		"i32540",
		"i32550",
		"i32600",
		"i32751",
		"i32752",
		"i32754",
		"i32810",
		"i32830",
		"i32840",
		"i32852",
		"i32870",
		"i32900",
		"i33010",
		"i3302003",
		"i3302004",
		"i3302013",
		"i3302015",
		"i3302017",
		"i3302019",
		"i3302020",
		"i3302021",
		"i33030",
		"i34100",
		"i34200",
		"i34320",
		"i34330",
		"i34340",
		"i34350",
		"i34410",
		"i34420",
		"i34430",
		"i34440",
		"i34520",
		"i34531",
		"i34532",
		"i34540",
		"i34600",
		"i34700",
		"i35101",
		"i35102",
		"i35300",
		"i36101",
		"i36102",
		"i36200",
		"i36300",
		"i3640002",
		"i3640007",
		"i3640010",
		"i3640026",
		"i3640029",
		"i3640045",
		"i3640046",
		"i3640047",
		"i37100",
		"i37200",
		"i37300",
		"i37400",
		"i41100",
		"i41220",
		"i41230",
		"i41300",
		"i41400",
		"i41500",
		"i41600",
		"i41900",
		"i42000",
		"i42100",
		"i42210",
		"i42390",
		"i42400",
		"i42600",
		"i42700",
		"i42800",
		"i42900",
		"i43000",
		"i44000",
		"i46700",
		"i47101",
		"i47200",
		"i47510",
		"i47520",
		"i47530",
		"i48110",
		"i48300",
		"i49100",
		"i49300",
		"i49410",
		"i49420",
		"i49540",
		"i50000",
		"i5010022",
		"i5010023",
		"i5010025",
		"i5010028",
		"i5010031",
		"i5020002",
		"i5020011",
		"i5020017",
		"i5020028",
		"i5020039",
		"i5020041",
		"i5020043",
		"i5020044",
		"i5020045",
		"i50300",
		"i50400",
		"i61000",
		"i63000",
		"i64100",
		"i64200",
		"i64300",
		"i64500",
		"i64600",
		"i64700",
		"i64800",
		"i65100",
		"i65200",
		"i65300",
		"i6540005",
		"i6540011",
		"i6540030",
		"i6560002",
		"i6560003",
		"i66100",
		"i66200",
		"i66500",
		"i67000",
		"i71000",
		"i72101",
		"i72102",
		"i72200",
		"i72300",
		"i72603",
		"i74000",
		"i75100",
		"i76300",
		"i76400",
		"i77001",
		"i77002",
		"i77003",
		"i79010",
		"i79020",
		"i81401",
		"i81402",
		"i81403",
		"i8150103",
		"i8150106",
		"i8150108",
		"i8150110",
		"i8150203",
		"i8150206",
		"i8150211",
		"i8150214",
		"i8150216",
		"i82001",
		"i82002",
		"i8200316",
		"i8200318",
		"i83100",
		"i83200",
		"i83400",
		"i83500",
		"i83600",
		"i83700",
		"i83800",
		"i8394007",
		"i83951",
		"i83952",
		"i8395416",
		"i8395419",
		"i8395448",
		"i8395449",
		"i83960",
		"i84200",
		"i84600",
		"i84801",
		"i84803",
		"i8480401",
		"i8500005",
		"i8500011",
		"i8500021",
		"i8500029",
		"i8500031",
		"i92110",
		"i92120",
		"i92300",
		"i95100",
		"i97100",
		"i9741102",
		"i9741105",
		"i9741109",
		"i9741110",
		"i9741112",
		"i97412",
		"i97911",
		"i97912",
		"i98100"
	};
	
	private static final String[] reutersBIGHier103ClassesNames =
	{	//"C1","C2","C3","C4","E1","E2","E3","E4","E5","E6","E7","G1","M1",
		"C11",
		"C12",
		"C13",
		"C14",
		"C15",
		"C151",
		"C1511",
		"C152",
		"C16",
		"C17",
		"C171",
		"C172",
		"C173",
		"C174",
		"C18",
		"C181",
		"C182",
		"C183",
		"C21",
		"C22",
		"C23",
		"C24",
		"C31",
		"C311",
		"C312",
		"C313",
		"C32",
		"C33",
		"C331",
		"C34",
		"C41",
		"C411",
		"C42",
		"CCAT",
		"E11",
		"E12",
		"E121",
		"E13",
		"E131",
		"E132",
		"E14",
		"E141",
		"E142",
		"E143",
		"E21",
		"E211",
		"E212",
		"E31",
		"E311",
		//"E312",
		"E313",
		"E41",
		"E411",
		"E51",
		"E511",
		"E512",
		"E513",
		"E61",
		"E71",
		"ECAT",
		"G15",
		"G151",
		"G152",
		"G153",
		"G154",
		"G155",
		"G156",
		"G157",
		"G158",
		"G159",
		"GCAT",
		"GCRIM",
		"GDEF",
		"GDIP",
		"GDIS",
		"GENT",
		"GENV",
		"GFAS",
		"GHEA",
		"GJOB",
		//"GMIL",
		"GOBIT",
		"GODD",
		"GPOL",
		"GPRO",
		"GREL",
		"GSCI",
		"GSPO",
		"GTOUR",
		"GVIO",
		"GVOTE",
		"GWEA",
		"GWELF",
		"M11",
		"M12",
		"M13",
		"M131",
		"M132",
		"M14",
		"M141",
		"M142",
		"M143",
		"MCAT"
	};
	
	private static final String[] reutersBIGInHier354ClassesNames =
	{
		"i0","i1","i2","i3","i4","i5",
		"i6","i7","i8","i9",
		"i01000",
		"i01001",
		"i0100105",
		//"i0100107",
		"i0100119",
		"i0100121",
		"i0100124",
		"i0100128",
		"i0100132",
		"i0100136",
		"i0100137",
		"i0100138",
		"i0100141",
		"i0100142",
		"i0100144",
		"i0100145",
		"i01002",
		"i0100206",
		"i0100216",
		"i0100223",
		"i02000",
		"i03000",
		"i11000",
		//"i12000",
		"i13000",
		"i1300002",
		"i1300003",
		"i1300013",
		"i1300014",
		"i14000",
		"i15000",
		"i16000",
		"i16100",
		"i1610107",
		"i1610109",
		"i16200",
		"i16300",
		"i17000",
		"i21000",
		"i22000",
		"i22100",
		"i22200",
		"i22300",
		"i22400",
		"i22450",
		"i22460",
		"i22470",
		"i22471",
		"i22472",
		"i23000",
		"i24000",
		"i24100",
		"i24200",
		"i24300",
		//"i24400",
		//"i24500",
		"i24600",
		"i24700",
		"i24794",
		"i24800",
		"i25000",
		"i25100",
		"i25110",
		"i25120",
		"i25130",
		"i25140",
		//"i25160",
		"i25510",
		//"i25520",
		"i25620",
		//"i25650",
		"i25670",
		"i25680",
		"i25700",
		"i25800",
		"i26000",
		"i31000",
		"i32000",
		"i32040",
		"i32050",
		"i32100",
		"i32200",
		"i32300",
		"i32440",
		"i32450",
		"i32510",
		"i32540",
		"i32550",
		"i32600",
		"i32751",
		"i32752",
		//"i32753",
		"i32754",
		//"i32755",
		"i32810",
		"i32830",
		"i32840",
		//"i32851",
		"i32852",
		"i32870",
		"i32900",
		"i33010",
		"i33020",
		"i3302003",
		"i3302004",
		"i3302013",
		"i3302015",
		"i3302017",
		//"i3302018",
		"i3302019",
		"i3302020",
		"i3302021",
		//"i3302022",
		"i33030",
		"i34000",
		"i34100",
		"i34200",
		"i34320",
		"i34330",
		"i34340",
		"i34350",
		"i34400",
		"i34410",
		"i34420",
		"i34430",
		"i34440",
		"i34520",
		"i34531",
		"i34532",
		"i34540",
		"i34600",
		"i34700",
		"i35000",
		"i35101",
		"i35102",
		//"i35200",
		"i35300",
		"i36101",
		"i36102",
		//"i36103",
		"i36200",
		"i36300",
		"i36400",
		"i3640002",
		"i3640007",
		"i3640010",
		"i3640026",
		"i3640029",
		//"i3640030",
		"i3640045",
		"i3640046",
		"i3640047",
		//"i3640048",
		"i37000",
		"i37100",
		"i37200",
		"i37300",
		"i37330",
		"i37400",
		"i41000",
		"i41100",
		"i41200",
		"i41220",
		"i41230",
		"i41300",
		"i41400",
		"i41500",
		"i41600",
		//"i41800",
		"i41900",
		"i42000",
		"i42100",
		"i42210",
		//"i42220",
		"i42390",
		"i42400",
		"i42600",
		"i42700",
		"i42800",
		"i42900",
		"i43000",
		"i44000",
		//"i45000",
		//"i45100",
		//"i45300",
		//"i45500",
		//"i45600",
		"i46000",
		"i46700",
		"i47000",
		"i47100",
		"i47101",
		"i47200",
		"i47500",
		"i47510",
		"i47520",
		//"i4752105",
		"i47530",
		"i48000",
		"i48100",
		"i48110",
		"i48300",
		"i49100",
		//"i49200",
		"i49300",
		"i49410",
		"i49420",
		"i49540",
		"i50000",
		"i50100",
		"i5010022",
		"i5010023",
		//"i5010024",
		"i5010025",
		//"i5010027",
		"i5010028",
		//"i5010029",
		"i5010031",
		"i50200",
		"i5020002",
		//"i5020006",
		//"i5020008",
		"i5020011",
		"i5020017",
		//"i5020022",
		"i5020028",
		//"i5020030",
		//"i5020032",
		"i5020039",
		"i5020041",
		"i5020043",
		"i5020044",
		"i5020045",
		//"i5020047",
		//"i5020050",
		//"i5020051",
		"i50300",
		"i50400",
		"i61000",
		"i63000",
		"i64000",
		"i64100",
		"i64200",
		"i64300",
		"i64500",
		"i64600",
		"i64700",
		"i64800",
		"i65100",
		"i65200",
		"i65300",
		"i65400",
		"i6540005",
		"i6540011",
		"i6540030",
		"i65600",
		"i6560002",
		"i6560003",
		//"i6560011",
		"i66000",
		"i66100",
		"i66200",
		"i66500",
		"i67000",
		"i71000",
		"i72101",
		"i72102",
		"i72200",
		"i72300",
		"i72603",
		"i74000",
		"i75000",
		"i75100",
		"i76300",
		"i76400",
		"i77001",
		"i77002",
		"i77003",
		"i79010",
		"i79020",
		"i81000",
		"i81400",
		"i81401",
		"i81402",
		"i81403",
		"i81501",
		"i8150103",
		"i8150106",
		"i8150108",
		"i8150110",
		"i81502",
		"i8150203",
		"i8150206",
		"i8150211",
		"i8150214",
		"i8150216",
		"i82000",
		"i82001",
		"i82002",
		"i82003",
		"i8200316",
		"i8200318",
		"i83100",
		"i83200",
		"i83400",
		"i83500",
		"i83600",
		"i83700",
		"i83800",
		"i83940",
		"i8394007",
		"i83951",
		"i83952",
		//"i8395205",
		//"i83953",
		"i83954",
		"i8395416",
		"i8395419",
		"i8395448",
		"i8395449",
		//"i8395451",
		"i83960",
		"i84000",
		//"i84100",
		"i84200",
		//"i84300",
		"i84600",
		"i84801",
		//"i84802",
		"i84803",
		"i84804",
		"i8480401",
		//"i8480410",
		"i85000",
		"i8500005",
		"i8500011",
		"i8500021",
		"i8500029",
		"i8500031",
		"i92110",
		"i92120",
		"i92300",
		"i95100",
		"i97100",
		"i97400",
		"i9741102",
		"i9741105",
		"i9741109",
		"i9741110",
		"i9741112",
		"i97412",
		"i97911",
		"i97912",
		"i98100"
	};
	
	private static final String[] reutersBIGRe366ClassesNames =
	{
		"aarct",
		"abdbi",
		"afgh",
		"africa",
		"ajmn",
		"aladi",
		"alb",
		"alg",
		"amsam",
		"andean",
		"ando",
		"angol",
		"anguil",
		"anta",
		"anzus",
		"apec",
		"arabst",
		"arg",
		"armen",
		"armhg",
		"aruba",
		"asean",
		"asia",
		"ausnz",
		"aust",
		"austr",
		"azerb",
		"bah",
		"bahrn",
		"baltst",
		"bandh",
		"barb",
		"belg",
		"belz",
		"benin",
		"benlux",
		"berm",
		"bhutan",
		"biot",
		"bol",
		"bots",
		"braz",
		"brunei",
		"bshzg",
		"bul",
		"burma",
		"burun",
		"bvi",
		"byelrs",
		"caccm",
		"cafr",
		"cam",
		"camer",
		"cana",
		"cani",
		"carcom",
		"carib",
		"casia",
		"cayi",
		"ceafr",
		"chad",
		"chil",
		"china",
		"col",
		"comor",
		"comwh",
		"congo",
		"cookis",
		"cosr",
		"crtia",
		"cuba",
		"curac",
		"cvi",
		"cypr",
		"czrep",
		"den",
		"devgco",
		"diego",
		"doma",
		"domr",
		"dubai",
		"eafr",
		"easia",
		"eastis",
		"ecowas",
		"ecu",
		"eec",
		"eeur",
		"efta",
		"egypt",
		"elsal",
		"eqgna",
		"ertra",
		"estnia",
		"ethpa",
		"eur",
		"eurea",
		"faeroe",
		"falk",
		"feast",
		"fesmic",
		"fgna",
		"fiji",
		"fin",
		"fpdt",
		"fpoly",
		"fra",
		"fujh",
		"gabon",
		"gamb",
		"gcc",
		"gfive",
		"gfr",
		"ghana",
		"gib",
		"greece",
		"greenl",
		"gren",
		"grgia",
		"gseven",
		"gten",
		"guad",
		"guam",
		"guat",
		"gubi",
		"gulfst",
		"gurep",
		"guy",
		"hait",
		"hkong",
		"hon",
		"hung",
		"icel",
		"icst",
		"india",
		"indoch",
		"indon",
		"indsub",
		"iran",
		"iraq",
		"ire",
		"islam",
		"israel",
		"italy",
		"jama",
		"jap",
		"jordan",
		"kampa",
		"kazk",
		"kenya",
		"kirb",
		"kirgh",
		"kuwait",
		"lam",
		"laos",
		"latv",
		"leban",
		"lesot",
		"liber",
		"libya",
		"liecht",
		"lith",
		"lux",
		"macao",
		"mah",
		"malag",
		"malaw",
		"malay",
		"maldr",
		"mali",
		"malta",
		"marq",
		"maurtn",
		"maurts",
		"mcdnia",
		"meast",
		"med",
		"mex",
		"moldv",
		"monac",
		"mongla",
		"mont",
		"moroc",
		"mozam",
		"mrcsl",
		"nafr",
		"nafta",
		"nam",
		"namib",
		"nant",
		"nato",
		"nauru",
		"nepal",
		"neth",
		"newcal",
		"nicg",
		"nigea",
		"niger",
		"niue",
		"nkorea",
		"nomari",
		"norfis",
		"norw",
		"nz",
		"oams",
		"oapec",
		"oau",
		"oceana",
		"oecd",
		"oilex",
		"oman",
		"opec",
		"pacis",
		"pacrm",
		"pakis",
		"palau",
		"pana",
		"papng",
		"para",
		"peru",
		"phlns",
		"pitcis",
		"pol",
		"porl",
		"pst",
		"ptaesa",
		"puri",
		"qatar",
		"rakh",
		"reuni",
		"rom",
		"russ",
		"rwanda",
		"saarab",
		"saarc",
		"sadcc",
		"safr",
		"sam",
		"sasia",
		"scand",
		"seasia",
		"sela",
		"seneg",
		"seych",
		"shajh",
		"silen",
		"singp",
		"skit",
		"skorea",
		"sluc",
		"slvak",
		"slvnia",
		"smarno",
		"solil",
		"somal",
		"souafr",
		"spain",
		"spsah",
		"srilan",
		"sthel",
		"stpm",
		"sudan",
		"surm",
		"svin",
		"swazd",
		"swed",
		"switz",
		"syria",
		"tadzk",
		"tai",
		"taiwan",
		"tanza",
		"tcai",
		"thail",
		"thdwld",
		"timor",
		"togo",
		"toklau",
		"tonga",
		"trscun",
		"trto",
		"tunis",
		"turk",
		"turkm",
		"tvlu",
		"uae",
		"uaq",
		"uganda",
		"uk",
		"ukrn",
		"un",
		"upvola",
		"uru",
		"usa",
		"usaak",
		"usaal",
		"usaar",
		"usaaz",
		"usaca",
		"usaco",
		"usact",
		"usadc",
		"usade",
		"usafl",
		"usaga",
		"usahi",
		"usaia",
		"usaid",
		"usail",
		"usain",
		"usaks",
		"usaky",
		"usala",
		"usama",
		"usamd",
		"usame",
		"usami",
		"usamn",
		"usamo",
		"usams",
		"usamt",
		"usanc",
		"usand",
		"usane",
		"usanh",
		"usanj",
		"usanm",
		"usanv",
		"usany",
		"usanyc",
		"usaok",
		"usaor",
		"usapa",
		"usari",
		"usasc",
		"usasd",
		"usatn",
		"usatx",
		"usaut",
		"usava",
		"usavt",
		"usawa",
		"usawi",
		"usawv",
		"usawy",
		"ussr",
		"uzbk",
		"vanu",
		"vcan",
		"ven",
		"vi",
		"vietn",
		"wafr",
		"wallis",
		"wasia",
		"weec",
		"weind",
		"westw",
		"weur",
		"world",
		"wsomoa",
		"yemar",
		"yug",
		"zaire",
		"zambia",
		"zimbab"
	};
	
	private static final String[] ohsumed23ClassesNames =
		{
		"C01",
		"C02",
		"C03",
		"C04",
		"C05",
		"C06",
		"C07",
		"C08",
		"C09",
		"C10",
		"C11",
		"C12",
		"C13",
		"C14",
		"C15",
		"C16",
		"C17",
		"C18",
		"C19",
		"C20",
		"C21",
		"C22",
		"C23"
		};
	
	private static final String[] ohsumedBIG119ClassesNames =
		{
		"accelerated idioventricular rhythm",
		"adams-stokes syndrome",
		"angina pectoris",
		"angina pectoris, variant",
		"angina, unstable",
		"aortic coarctation",
		"aortic subvalvular stenosis",
		"aortic valve insufficiency",
		"aortic valve prolapse",
		"aortic valve stenosis",
		"aortopulmonary septal defect",
		"arrhythmia",
		"arrhythmia, sinus",
		"atrial fibrillation",
		"atrial flutter",
		"bradycardia",
		"bundle-branch block",
		"carcinoid heart disease",
		"cardiac output, high",
		"cardiac output, low",
		"cardiac tamponade",
		"cardiomyopathy, alcoholic",
		"cardiomyopathy, congestive",
		"cardiomyopathy, hypertrophic",
		"cardiomyopathy, restrictive",
		"chagas cardiomyopathy",
		"cor triatriatum",
		"coronary aneurysm",
		"coronary arteriosclerosis",
		"coronary disease",
		"coronary thrombosis",
		"coronary vasospasm",
		"coronary vessel anomalies",
		"crisscross heart",
		"death, sudden, cardiac",
		"dextrocardia",
		"double outlet right ventricle",
		"ductus arteriosus, patent",
		"dyspnea, paroxysmal",
		"ebstein's anomaly",
		"edema, cardiac",
		"eisenmenger complex",
		"endocardial cushion defects",
		"endocardial fibroelastosis",
		"endocarditis",
		"endocarditis, bacterial",
		"endocarditis, subacute bacterial",
		"endomyocardial fibrosis",
		"extrasystole",
		"heart aneurysm",
		"heart arrest",
		"heart block",
		"heart defects, congenital",
		"heart diseases",
		"heart failure, congestive",
		"heart hypertrophy",
		"heart murmurs",
		"heart neoplasms",
		"heart rupture",
		"heart rupture, post-infarction",
		"heart septal defects",
		"heart septal defects, atrial",
		"heart septal defects, ventricular",
		"heart valve diseases",
		"heart valve prolapse",
		"hypertrophy, left ventricular",
		"hypertrophy, right ventricular",
		"kearns syndrome",
		"levocardia",
		"long qt syndrome",
		"lown-ganong-levine syndrome",
		"lutembacher's syndrome",
		"mitral valve insufficiency",
		"mitral valve prolapse",
		"mitral valve stenosis",
		"myocardial diseases",
		"myocardial infarction",
		"myocardial ischemia",
		"myocardial reperfusion injury",
		"myocardial stunning",
		"myocarditis",
		"parasystole",
		"pericardial effusion",
		"pericarditis",
		"pericarditis, constrictive",
		"pericarditis, tuberculous",
		"pneumopericardium",
		"postpericardiotomy syndrome",
		"pre-excitation syndromes",
		"pre-excitation, mahaim-type",
		"pulmonary heart disease",
		"pulmonary subvalvular stenosis",
		"pulmonary valve insufficiency",
		"pulmonary valve stenosis",
		"rheumatic heart disease",
		"shock, cardiogenic",
		"sick sinus syndrome",
		"sinoatrial block",
		"syndrome x",
		"tachycardia",
		"tachycardia, atrioventricular nodal reentry",
		"tachycardia, ectopic atrial",
		"tachycardia, ectopic junctional",
		"tachycardia, paroxysmal",
		"tachycardia, sinoatrial nodal reentry",
		"tachycardia, sinus",
		"tachycardia, supraventricular",
		"tachycardia, ventricular",
		"tetralogy of fallot",
		"torsades de pointes",
		"transposition of great vessels",
		"tricuspid valve insufficiency",
		"tricuspid valve prolapse",
		"tricuspid valve stenosis",
		"trilogy of fallot",
		"truncus arteriosus, persistent",
		"ventricular fibrillation",
		"ventricular outflow obstruction",
		"wolff-parkinson-white syndrome"
		};
	
	private static final String[] ohsumedBIG96ClassesNames =
		{
		"angina pectoris",
		"angina pectoris, variant",
		"angina, unstable",
		"aortic coarctation",
		"aortic subvalvular stenosis",
		"aortic valve insufficiency",
		"aortic valve prolapse",
		"aortic valve stenosis",
		"aortopulmonary septal defect",
		"arrhythmia",
		"arrhythmia, sinus",
		"atrial fibrillation",
		"atrial flutter",
		"bradycardia",
		"bundle-branch block",
		"carcinoid heart disease",
		"cardiac output, low",
		"cardiac tamponade",
		"cardiomyopathy, alcoholic",
		"cardiomyopathy, congestive",
		"cardiomyopathy, hypertrophic",
		"cardiomyopathy, restrictive",
		"chagas cardiomyopathy",
		"cor triatriatum",
		"coronary aneurysm",
		"coronary arteriosclerosis",
		"coronary disease",
		"coronary thrombosis",
		"coronary vasospasm",
		"coronary vessel anomalies",
		"crisscross heart",
		"dextrocardia",
		"double outlet right ventricle",
		"ductus arteriosus, patent",
		"ebstein's anomaly",
		"edema, cardiac",
		"eisenmenger complex",
		"endocardial cushion defects",
		"endocardial fibroelastosis",
		"endocarditis",
		"endocarditis, bacterial",
		"endocarditis, subacute bacterial",
		"endomyocardial fibrosis",
		"extrasystole",
		"heart aneurysm",
		"heart arrest",
		"heart block",
		"heart defects, congenital",
		"heart diseases",
		"heart failure, congestive",
		"heart murmurs",
		"heart neoplasms",
		"heart rupture",
		"heart rupture, post-infarction",
		"heart septal defects",
		"heart septal defects, atrial",
		"heart septal defects, ventricular",
		"heart valve diseases",
		"kearns syndrome",
		"long qt syndrome",
		"mitral valve insufficiency",
		"mitral valve prolapse",
		"mitral valve stenosis",
		"myocardial diseases",
		"myocardial infarction",
		"myocardial reperfusion injury",
		"myocarditis",
		"pericardial effusion",
		"pericarditis",
		"pericarditis, constrictive",
		"pericarditis, tuberculous",
		"pneumopericardium",
		"postpericardiotomy syndrome",
		"pre-excitation syndromes",
		"pulmonary heart disease",
		"pulmonary valve insufficiency",
		"pulmonary valve stenosis",
		"rheumatic heart disease",
		"shock, cardiogenic",
		"sick sinus syndrome",
		"sinoatrial block",
		"tachycardia",
		"tachycardia, atrioventricular nodal reentry",
		"tachycardia, ectopic atrial",
		"tachycardia, ectopic junctional",
		"tachycardia, paroxysmal",
		"tachycardia, sinus",
		"tachycardia, supraventricular",
		"tetralogy of fallot",
		"transposition of great vessels",
		"tricuspid valve insufficiency",
		"tricuspid valve stenosis",
		"truncus arteriosus, persistent",
		"ventricular fibrillation",
		"ventricular outflow obstruction",
		"wolff-parkinson-white syndrome"
		};
	
	private static final String[] ohsumedBIG49ClassesNames =
		{
		"angina pectoris",
		"angina, unstable",
		"aortic coarctation",
		"aortic valve insufficiency",
		"aortic valve stenosis",
		"arrhythmia",
		"atrial fibrillation",
		"bradycardia",
		"cardiac output, low",
		"cardiac tamponade",
		"cardiomyopathy, congestive",
		"cardiomyopathy, hypertrophic",
		"coronary arteriosclerosis",
		"coronary disease",
		"coronary thrombosis",
		"coronary vasospasm",
		"coronary vessel anomalies",
		"ductus arteriosus, patent",
		"endocarditis",
		"endocarditis, bacterial",
		"extrasystole",
		"heart aneurysm",
		"heart arrest",
		"heart block",
		"heart defects, congenital",
		"heart diseases",
		"heart failure, congestive",
		"heart neoplasms",
		"heart septal defects, atrial",
		"heart septal defects, ventricular",
		"heart valve diseases",
		"mitral valve insufficiency",
		"mitral valve prolapse",
		"mitral valve stenosis",
		"myocardial diseases",
		"myocardial infarction",
		"myocardial reperfusion injury",
		"myocarditis",
		"pericardial effusion",
		"pericarditis",
		"pulmonary valve stenosis",
		"shock, cardiogenic",
		"tachycardia",
		"tachycardia, supraventricular",
		"tetralogy of fallot",
		"transposition of great vessels",
		"tricuspid valve insufficiency",
		"ventricular fibrillation",
		"wolff-parkinson-white syndrome"
		};
	
	private static final String[] ohsumedBIG28ClassesNames =
		{
		"angina pectoris, variant",
		"arrhythmia, sinus",
		"atrial flutter",
		"bundle-branch block",
		"cardiomyopathy, restrictive",
		"chagas cardiomyopathy",
		"coronary aneurysm",
		"double outlet right ventricle",
		"ebstein's anomaly",
		"endomyocardial fibrosis",
		"heart murmurs",
		"heart rupture",
		"heart rupture, post-infarction",
		"heart septal defects",
		"kearns syndrome",
		"long qt syndrome",
		"pericarditis, constrictive",
		"pre-excitation syndromes",
		"pulmonary heart disease",
		"pulmonary valve insufficiency",
		"rheumatic heart disease",
		"sick sinus syndrome",
		"tachycardia, atrioventricular nodal reentry",
		"tachycardia, ectopic atrial",
		"tachycardia, paroxysmal",
		"tachycardia, sinus",
		"truncus arteriosus, persistent",
		"ventricular outflow obstruction"
		};
	
	private static final String[] ohsumedBIG26ClassesNames =
		{
		"adams-stokes syndrome",
		"aortic subvalvular stenosis",
		"aortic valve prolapse",
		"aortopulmonary septal defect",
		"carcinoid heart disease",
		"cardiomyopathy, alcoholic",
		"cor triatriatum",
		"crisscross heart",
		"dextrocardia",
		"dyspnea, paroxysmal",
		"edema, cardiac",
		"eisenmenger complex",
		"endocardial cushion defects",
		"endocardial fibroelastosis",
		"endocarditis, subacute bacterial",
		"levocardia",
		"pericarditis, tuberculous",
		"pneumopericardium",
		"postpericardiotomy syndrome",
		"pre-excitation, mahaim-type",
		"pulmonary subvalvular stenosis",
		"sinoatrial block",
		"tachycardia, ectopic junctional",
		"tachycardia, sinoatrial nodal reentry",
		"tricuspid valve prolapse",
		"tricuspid valve stenosis"
		};
	
	private static final String[] reutersSingle8ClassesNames =
		{
		"acq", 
		"crude",
		"earn",
		"grain",
		"interest", 
		"money-fx",
		"ship",
		"trade" 
		};
	
	private static final String[] reutersSingle52ClassesNames =
		{
		"acq",
		"alum",
		"bop",
		"carcass",
		"cocoa",
		"coffee",
		"copper",
		"cotton",
		"cpi",
		"cpu",
		"crude",
		"dlr",
		"earn",
		"fuel",
		"gas",
		"gnp",
		"gold",
		"grain",
		"heat",
		"housing",
		"income",
		"instal-debt",
		"interest",
		"ipi",
		"iron-steel",
		"jet",
		"jobs",
		"lead",
		"lei",
		"livestock",
		"lumber",
		"meal-feed",
		"money-fx",
		"money-supply",
		"nat-gas",
		"nickel",
		"orange",
		"pet-chem",
		"platinum",
		"potato",
		"reserves",
		"retail",
		"rubber",
		"ship",
		"strategic-metal",
		"sugar",
		"tea",
		"tin",
		"trade",
		"veg-oil",
		"wpi",
		"zinc"
		};
	
	private static final String[] cade12ClassesNames =
		{
		"servicos",
		"sociedade",
		"lazer",
		"informatica",
		"saude",
		"educacao",
		"internet",
		"cultura",
		"esportes",
		"noticias",
		"ciencias",
		"compras-online",  
		};
	
	private static final String[] ng20ClassesNames =
		{
		"alt.atheism", 
		"comp.graphics", 
		"comp.os.ms-windows.misc",
		"comp.sys.ibm.pc.hardware", 
		"comp.sys.mac.hardware",
		"comp.windows.x",
		"misc.forsale",
		"rec.autos",
		"rec.motorcycles",
		"rec.sport.baseball",
		"rec.sport.hockey",
		"sci.crypt",
		"sci.electronics",
		"sci.med",
		"sci.space",
		"soc.religion.christian",
		"talk.politics.guns",
		"talk.politics.mideast",
		"talk.politics.misc",
		"talk.religion.misc"
		};
	
	private static final String[] trecap20ClassesNames =
		{
		"aparts",
		"bonds",
		"boxoffice",
		"britx",
		"budget",
		"burma",
		"bush",
		"dollargold",
		"dukakis",
		"german",
		"gulf",
		"hostages",
		"ireland",
		"israel",
		"japan",
		"nielsens",
		"quayle",
		"tickertalk",
		"weatherpageweather",
		"yugoslavia"
		};
	
	private static final String[] otherClassesNames =
		{
		"positive"
		};
	
	public static ArrayList<String> reuters115Classes;
	public static ArrayList<Integer> reuters115ClassesIds;	
	public static ArrayList<String> reuters90Classes;
	public static ArrayList<Integer> reuters90ClassesIds;
	public static ArrayList<String> reuters10Classes;
	public static ArrayList<Integer> reuters10ClassesIds;
	
	public static ArrayList<String> reutersBIG103Classes;
	public static ArrayList<Integer> reutersBIG103ClassesIds;
	public static ArrayList<String> reutersBIG80Classes;
	public static ArrayList<Integer> reutersBIG80ClassesIds;
	public static ArrayList<String> reutersBIGIn354Classes;
	public static ArrayList<Integer> reutersBIGIn354ClassesIds;
	public static ArrayList<String> reutersBIGIn262Classes;
	public static ArrayList<Integer> reutersBIGIn262ClassesIds;
	public static ArrayList<String> reutersBIGHier103Classes;
	public static ArrayList<Integer> reutersBIGHier103ClassesIds;
	public static ArrayList<String> reutersBIGInHier354Classes;
	public static ArrayList<Integer> reutersBIGInHier354ClassesIds;
	public static ArrayList<String> reutersBIGRe366Classes;
	public static ArrayList<Integer> reutersBIGRe366ClassesIds;
	
	public static ArrayList<String> ohsumed23Classes;
	public static ArrayList<Integer> ohsumed23ClassesIds;
	
	public static ArrayList<String> ohsumedBIG119Classes;
	public static ArrayList<Integer> ohsumedBIG119ClassesIds;
	public static ArrayList<String> ohsumedBIG96Classes;
	public static ArrayList<Integer> ohsumedBIG96ClassesIds;
	public static ArrayList<String> ohsumedBIG49Classes;
	public static ArrayList<Integer> ohsumedBIG49ClassesIds;
	public static ArrayList<String> ohsumedBIG28Classes;
	public static ArrayList<Integer> ohsumedBIG28ClassesIds;
	public static ArrayList<String> ohsumedBIG26Classes;
	public static ArrayList<Integer> ohsumedBIG26ClassesIds;
	
	public static ArrayList<String> reutersSingle8Classes;
	public static ArrayList<Integer> reutersSingle8ClassesIds;
	public static ArrayList<String> reutersSingle52Classes;
	public static ArrayList<Integer> reutersSingle52ClassesIds;
	public static ArrayList<String> cade12Classes;
	public static ArrayList<Integer> cade12ClassesIds;
	public static ArrayList<String> ng20Classes;
	public static ArrayList<Integer> ng20ClassesIds;
	
	public static ArrayList<String> trecap20Classes;
	public static ArrayList<Integer> trecap20ClassesIds;
	
	public static ArrayList<String> otherClasses;
	public static ArrayList<Integer> otherClassesIds;
	
	static{
		reuters115Classes = new ArrayList<String>();
		reuters115ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<reuters115ClassesNames.length; i++){
			reuters115Classes.add(reuters115ClassesNames[i].toLowerCase());
			reuters115ClassesIds.add(new Integer(i+1));
		}
		
		reuters90Classes = new ArrayList<String>();
		reuters90ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<reuters90ClassesNames.length; i++){
			reuters90Classes.add(reuters90ClassesNames[i].toLowerCase());
			reuters90ClassesIds.add(new Integer(i+1));
		}
		
		reuters10Classes = new ArrayList<String>();
		reuters10ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<reuters10ClassesNames.length; i++){
			reuters10Classes.add(reuters10ClassesNames[i].toLowerCase());
			reuters10ClassesIds.add(new Integer(i+1));
		}
		
		reutersBIG103Classes = new ArrayList<String>();
		reutersBIG103ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<reutersBIG103ClassesNames.length; i++){
			reutersBIG103Classes.add(reutersBIG103ClassesNames[i].toLowerCase());
			reutersBIG103ClassesIds.add(new Integer(i+1));
		}
		
		reutersBIG80Classes = new ArrayList<String>();
		reutersBIG80ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<reutersBIG80ClassesNames.length; i++){
			reutersBIG80Classes.add(reutersBIG80ClassesNames[i].toLowerCase());
			reutersBIG80ClassesIds.add(new Integer(i+1));
		}
		
		reutersBIGIn354Classes = new ArrayList<String>();
		reutersBIGIn354ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<reutersBIGIn354ClassesNames.length; i++){
			reutersBIGIn354Classes.add(reutersBIGIn354ClassesNames[i].toLowerCase());
			reutersBIGIn354ClassesIds.add(new Integer(i+1));
		}
		
		reutersBIGIn262Classes = new ArrayList<String>();
		reutersBIGIn262ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<reutersBIGIn262ClassesNames.length; i++){
			reutersBIGIn262Classes.add(reutersBIGIn262ClassesNames[i].toLowerCase());
			reutersBIGIn262ClassesIds.add(new Integer(i+1));
		}
		
		reutersBIGHier103Classes = new ArrayList<String>();
		reutersBIGHier103ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<reutersBIGHier103ClassesNames.length; i++){
			reutersBIGHier103Classes.add(reutersBIGHier103ClassesNames[i].toLowerCase());
			reutersBIGHier103ClassesIds.add(new Integer(i+1));
		}
		
		reutersBIGInHier354Classes = new ArrayList<String>();
		reutersBIGInHier354ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<reutersBIGInHier354ClassesNames.length; i++){
			reutersBIGInHier354Classes.add(reutersBIGInHier354ClassesNames[i].toLowerCase());
			reutersBIGInHier354ClassesIds.add(new Integer(i+1));
		}
		
		reutersBIGRe366Classes = new ArrayList<String>();
		reutersBIGRe366ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<reutersBIGRe366ClassesNames.length; i++){
			reutersBIGRe366Classes.add(reutersBIGRe366ClassesNames[i].toLowerCase());
			reutersBIGRe366ClassesIds.add(new Integer(i+1));
		}
		
		ohsumed23Classes = new ArrayList<String>();
		ohsumed23ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<ohsumed23ClassesNames.length; i++){
			ohsumed23Classes.add(ohsumed23ClassesNames[i].toLowerCase());
			ohsumed23ClassesIds.add(new Integer(i+1));
		}
		
		ohsumedBIG119Classes = new ArrayList<String>();
		ohsumedBIG119ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<ohsumedBIG119ClassesNames.length; i++){
			ohsumedBIG119Classes.add(ohsumedBIG119ClassesNames[i].toLowerCase());
			ohsumedBIG119ClassesIds.add(new Integer(i+1));
		}
		ohsumedBIG96Classes = new ArrayList<String>();
		ohsumedBIG96ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<ohsumedBIG96ClassesNames.length; i++){
			ohsumedBIG96Classes.add(ohsumedBIG96ClassesNames[i].toLowerCase());
			ohsumedBIG96ClassesIds.add(new Integer(i+1));
		}
		ohsumedBIG49Classes = new ArrayList<String>();
		ohsumedBIG49ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<ohsumedBIG49ClassesNames.length; i++){
			ohsumedBIG49Classes.add(ohsumedBIG49ClassesNames[i].toLowerCase());
			ohsumedBIG49ClassesIds.add(new Integer(i+1));
		}
		ohsumedBIG28Classes = new ArrayList<String>();
		ohsumedBIG28ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<ohsumedBIG28ClassesNames.length; i++){
			ohsumedBIG28Classes.add(ohsumedBIG28ClassesNames[i].toLowerCase());
			ohsumedBIG28ClassesIds.add(new Integer(i+1));
		}
		ohsumedBIG26Classes = new ArrayList<String>();
		ohsumedBIG26ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<ohsumedBIG26ClassesNames.length; i++){
			ohsumedBIG26Classes.add(ohsumedBIG26ClassesNames[i].toLowerCase());
			ohsumedBIG26ClassesIds.add(new Integer(i+1));
		}
		
		reutersSingle8Classes = new ArrayList<String>();
		reutersSingle8ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<reutersSingle8ClassesNames.length; i++){
			reutersSingle8Classes.add(reutersSingle8ClassesNames[i].toLowerCase());
			reutersSingle8ClassesIds.add(new Integer(i+1));
		}
		reutersSingle52Classes = new ArrayList<String>();
		reutersSingle52ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<reutersSingle52ClassesNames.length; i++){
			reutersSingle52Classes.add(reutersSingle52ClassesNames[i].toLowerCase());
			reutersSingle52ClassesIds.add(new Integer(i+1));
		}
		cade12Classes = new ArrayList<String>();
		cade12ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<cade12ClassesNames.length; i++){
			cade12Classes.add(cade12ClassesNames[i].toLowerCase());
			cade12ClassesIds.add(new Integer(i+1));
		}
		ng20Classes = new ArrayList<String>();
		ng20ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<ng20ClassesNames.length; i++){
			ng20Classes.add(ng20ClassesNames[i].toLowerCase());
			ng20ClassesIds.add(new Integer(i+1));
		}
		
		trecap20Classes = new ArrayList<String>();
		trecap20ClassesIds = new ArrayList<Integer>();
		for(int i=0; i<trecap20ClassesNames.length; i++){
			trecap20Classes.add(trecap20ClassesNames[i].toLowerCase());
			trecap20ClassesIds.add(new Integer(i+1));
		}
		
		otherClasses = new ArrayList<String>();
		otherClassesIds = new ArrayList<Integer>();
		for(int i=0; i<otherClassesNames.length; i++){
			otherClasses.add(otherClassesNames[i].toLowerCase());
			otherClassesIds.add(new Integer(i+1));
		}
	}
	
	public static boolean isReuters115Class(String className){
		return reuters115Classes.contains(className.toLowerCase());
	}
	
	public static boolean isReuters90Class(String className){
		return reuters90Classes.contains(className.toLowerCase());
	}
	
	public static boolean isReuters10Class(String className){
		return reuters10Classes.contains(className.toLowerCase());
	}
	
	public static boolean isReutersBIG103Class(String className){
		return reutersBIG103Classes.contains(className.toLowerCase());
	}
	
	public static boolean isReutersBIG80Class(String className){
		return reutersBIG80Classes.contains(className.toLowerCase());
	}
	
	public static boolean isReutersBIGIn354Class(String className){
		return reutersBIGIn354Classes.contains(className.toLowerCase());
	}
	
	public static boolean isReutersBIGIn262Class(String className){
		return reutersBIGIn262Classes.contains(className.toLowerCase());
	}
	
	public static boolean isReutersBIGHier103Class(String className){
		return reutersBIGHier103Classes.contains(className.toLowerCase());
	}
	
	public static boolean isReutersBIGInHier354Class(String className){
		return reutersBIGInHier354Classes.contains(className.toLowerCase());
	}
	
	public static boolean isReutersBIGRe366Class(String className){
		return reutersBIGRe366Classes.contains(className.toLowerCase());
	}
	
	public static boolean isOhsumed23Class(String className){
		return ohsumed23Classes.contains(className.toLowerCase());
	}
	
	public static boolean isOhsumedBIG119Class(String className){
		return ohsumedBIG119Classes.contains(className.toLowerCase());
	}
	public static boolean isOhsumedBIG96Class(String className){
		return ohsumedBIG96Classes.contains(className.toLowerCase());
	}
	public static boolean isOhsumedBIG49Class(String className){
		return ohsumedBIG49Classes.contains(className.toLowerCase());
	}
	public static boolean isOhsumedBIG28Class(String className){
		return ohsumedBIG28Classes.contains(className.toLowerCase());
	}
	public static boolean isOhsumedBIG26Class(String className){
		return ohsumedBIG26Classes.contains(className.toLowerCase());
	}
	
	public static boolean isReutersSingle8Class(String className){
		return reutersSingle8Classes.contains(className.toLowerCase());
	}
	public static boolean isReutersSingle52Class(String className){
		return reutersSingle52Classes.contains(className.toLowerCase());
	}
	public static boolean isCade12Class(String className){
		return cade12Classes.contains(className.toLowerCase());
	}
	public static boolean isNg20Class(String className){
		return ng20Classes.contains(className.toLowerCase());
	}
	
	public static boolean isTrecap20Class(String className){
		return trecap20Classes.contains(className.toLowerCase());
	}
	
	public static boolean isOtherClass(String className){
		return otherClasses.contains(className.toLowerCase());
	}
}
